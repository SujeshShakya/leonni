@model Leonni.Models.ViewModels.GroupModel
@{
    ViewBag.Title = "Add Group";
}
<h2>
    Edit Group</h2>
@using (Html.BeginForm("add", "Group", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)

    @*@Html.Hidden("CreatedBy", Membership.GetUser().ProviderUserKey)*@
    <fieldset>
        <legend>Group</legend>
        
      
        <div class="editor-label">
            @Html.LabelFor(model => model.DisciplineId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.DisciplineId, (IEnumerable<SelectListItem>)ViewBag.DisciplineId, "Choose discipline")
            @Html.ValidationMessageFor(model => model.DisciplineId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Summary)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Summary)
            @Html.ValidationMessageFor(model => model.Summary)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Text)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Text)
            @Html.ValidationMessageFor(model => model.Text)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.IsVisible)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsVisible)
            @Html.ValidationMessageFor(model => model.IsVisible)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.IsCloseIncome)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsCloseIncome)
            @Html.ValidationMessageFor(model => model.IsCloseIncome)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.AllowContents)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AllowContents)
            @Html.ValidationMessageFor(model => model.AllowContents)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CountryId)
        </div>
        <div class="editor-field">
            <select name="CountryId" id="CountryId">
            </select>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.StateId)
        </div>
        <div class="editor-field">
            <select name="StateId" id="StateId">
            </select>
        </div>
       
        <div class="editor-label">
            @Html.LabelFor(model => model.GroupPic)
            @Html.ValidationMessageFor(model => model.GroupPic)
        </div>
        <div class="editor-field">
            <input type="file" name="GroupPic" />
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
@section scripts {
    <script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script type="text/javascript">
        $(function () {
            var data = [];
            GetCountries();

            function GetCountries() {
                $.getJSON('@Url.Action("GetCountryList", "Group")', {}, function (response) {
                    if (response && response.count > 0) {
                        data = [];
                        $('#CountryId').html('<option value=""></option>');

                        $.each(response.countries, function (index, item) {
                            var option = "<option value=" + item.ID + " >" + item.Name + "</option>";
                            $('#CountryId').append(option);

                            data[item.ID] = item;
                        });

                    }
                });

                $('#CountryId').change(function () {
                    var id = $(this).val();

                    var country = data[id];

                    $('#StateId').html('<option value=""></option>');
                    $.each(country.States, function (index, item) {
                        var option = "<option value=" + item.ID + " >" + item.Name + "</option>";
                        $('#StateId').append(option);
                    });
                });
            }

            $('form').submit(function (e) {
                //e.preventDefault();
            });
        });
    </script>
}
