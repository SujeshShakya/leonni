@model Leonni.Models.ViewModels.ProjectModel
@{
    ViewBag.Title = "Add";
}
<h2>
    Add</h2>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Project</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CategoryId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CategoryId)
            @Html.ValidationMessageFor(model => model.CategoryId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.DisciplineId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DisciplineId)
            @Html.ValidationMessageFor(model => model.DisciplineId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CountryId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CountryId)
            @Html.ValidationMessageFor(model => model.CountryId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.StateId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StateId)
            @Html.ValidationMessageFor(model => model.StateId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Cost)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Cost)
            @Html.ValidationMessageFor(model => model.Cost)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Inversion)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Inversion)
            @Html.ValidationMessageFor(model => model.Inversion)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Resume)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Resume)
            @Html.ValidationMessageFor(model => model.Resume)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.YoutubeLink)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.YoutubeLink)
            @Html.ValidationMessageFor(model => model.YoutubeLink)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Link)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Link)
            @Html.ValidationMessageFor(model => model.Link)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.IsDeleted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsDeleted)
            @Html.ValidationMessageFor(model => model.IsDeleted)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.IsDisabled)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsDisabled)
            @Html.ValidationMessageFor(model => model.IsDisabled)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.DeletedBy)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DeletedBy)
            @Html.ValidationMessageFor(model => model.DeletedBy)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.DisabledBy)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DisabledBy)
            @Html.ValidationMessageFor(model => model.DisabledBy)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CreatedDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreatedDate)
            @Html.ValidationMessageFor(model => model.CreatedDate)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.DeletedDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DeletedDate)
            @Html.ValidationMessageFor(model => model.DeletedDate)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CreatedBy)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreatedBy)
            @Html.ValidationMessageFor(model => model.CreatedBy)
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
}
